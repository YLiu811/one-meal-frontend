{"ast":null,"code":"var _jsxFileName = \"/Users/yliu88/Developer/projects/Capstone/One-Meal-Front-End/front-end-one-meal-capstone/one-meal-app/src/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { useState } from \"react\";\n// import axios from \"axios\";\n\n// const REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext(null);\nexport const useAppContext = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error(\"AppContext must be within appContextProvider!\");\n  }\n  return context;\n};\n_s(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst AppContextProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [favorites, setFavorites] = useState([]);\n  const addToFave = recipe => {\n    console.log(\"add to fave clicked\");\n    // axios.post(`${REACT_APP_BACKEND_URL}/favorites`)\n    // .then((response)=>{\n    const newFaves = [...favorites];\n    const newFaveJSON = {\n      ...recipe\n      // \"userId\": response.data.user_id\n    };\n\n    newFaves.push(newFaveJSON);\n    setFavorites(newFaves); //this method does not require a .get request; we are pushing the Fave data to the Faves list and using the setter to trigger a rerender.\n  };\n  // .catch((error)=>{\n  // console.log(error);\n  // });\n\n  const removeFave = id => {\n    console.log(\"remove fave clicked\");\n    // axios\n    // .delete(`${REACT_APP_BACKEND_URL}/favorites/${id}`)\n    // .then(() => {\n    const newFaves = [];\n    for (const fave of favorites) {\n      if (fave.id !== id) {\n        newFaves.push(fave);\n      }\n    }\n    setFavorites(newFaves);\n    // })\n    // .catch((err) => {\n    //     console.log(err);\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      favorites,\n      addToFave,\n      removeFave\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppContextProvider, \"8/j46ayqkxuOXjyrDl2B5q17iyc=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","AppContext","useAppContext","context","undefined","Error","AppContextProvider","children","favorites","setFavorites","addToFave","recipe","console","log","newFaves","newFaveJSON","push","removeFave","id","fave"],"sources":["/Users/yliu88/Developer/projects/Capstone/One-Meal-Front-End/front-end-one-meal-capstone/one-meal-app/src/context/appContext.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport { useState } from \"react\";\n// import axios from \"axios\";\n\n// const REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nconst AppContext = createContext(null);\n\nexport const useAppContext = () => {\n  const context = useContext(AppContext);\n\n  if (context === undefined) {\n    throw new Error(\"AppContext must be within appContextProvider!\");\n  }\n  return context;\n};\n\nconst AppContextProvider = ({ children }) => {\n  const [favorites, setFavorites] = useState([]);\n\n  const addToFave = (recipe) => {\n    console.log(\"add to fave clicked\");\n    // axios.post(`${REACT_APP_BACKEND_URL}/favorites`)\n    // .then((response)=>{\n    const newFaves = [...favorites];\n    const newFaveJSON = {\n      ...recipe,\n      // \"userId\": response.data.user_id\n    };\n    newFaves.push(newFaveJSON);\n    setFavorites(newFaves); //this method does not require a .get request; we are pushing the Fave data to the Faves list and using the setter to trigger a rerender.\n  };\n  // .catch((error)=>{\n  // console.log(error);\n  // });\n\n  const removeFave = (id) => {\n    console.log(\"remove fave clicked\");\n    // axios\n    // .delete(`${REACT_APP_BACKEND_URL}/favorites/${id}`)\n    // .then(() => {\n    const newFaves = [];\n    for (const fave of favorites) {\n      if (fave.id !== id) {\n        newFaves.push(fave);\n      }\n    }\n    setFavorites(newFaves);\n    // })\n    // .catch((err) => {\n    //     console.log(err);\n    // });\n  };\n  return (\n    <AppContext.Provider value={{ favorites, addToFave, removeFave }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC;;AAEA;AAAA;AAEA,MAAMC,UAAU,gBAAGH,aAAa,CAAC,IAAI,CAAC;AAEtC,OAAO,MAAMI,aAAa,GAAG,MAAM;EAAA;EACjC,MAAMC,OAAO,GAAGJ,UAAU,CAACE,UAAU,CAAC;EAEtC,IAAIE,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOF,OAAO;AAChB,CAAC;AAAC,GAPWD,aAAa;AAS1B,MAAMI,kBAAkB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,SAAS,GAAIC,MAAM,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC;IACA;IACA,MAAMC,QAAQ,GAAG,CAAC,GAAGN,SAAS,CAAC;IAC/B,MAAMO,WAAW,GAAG;MAClB,GAAGJ;MACH;IACF,CAAC;;IACDG,QAAQ,CAACE,IAAI,CAACD,WAAW,CAAC;IAC1BN,YAAY,CAACK,QAAQ,CAAC,CAAC,CAAC;EAC1B,CAAC;EACD;EACA;EACA;;EAEA,MAAMG,UAAU,GAAIC,EAAE,IAAK;IACzBN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC;IACA;IACA;IACA,MAAMC,QAAQ,GAAG,EAAE;IACnB,KAAK,MAAMK,IAAI,IAAIX,SAAS,EAAE;MAC5B,IAAIW,IAAI,CAACD,EAAE,KAAKA,EAAE,EAAE;QAClBJ,QAAQ,CAACE,IAAI,CAACG,IAAI,CAAC;MACrB;IACF;IACAV,YAAY,CAACK,QAAQ,CAAC;IACtB;IACA;IACA;IACA;EACF,CAAC;;EACD,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEN,SAAS;MAAEE,SAAS;MAAEO;IAAW,CAAE;IAAA,UAC9DV;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAC,IAzCID,kBAAkB;AAAA,KAAlBA,kBAAkB;AA2CxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}